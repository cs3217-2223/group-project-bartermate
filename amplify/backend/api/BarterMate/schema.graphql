type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  username: String
  Transactions: [Transaction] @manyToMany(relationName: "UserTransaction")
  Postings: [Posting] @hasMany(indexName: "byUser", fields: ["id"])
  Requests: [Request] @hasMany(indexName: "byUser", fields: ["id"])
  Items: [Item] @hasMany(indexName: "byUser", fields: ["id"])
}

type Request @model @auth(rules: [{allow: public}]) {
  id: ID!
  description: String
  createdAt: AWSDateTime
  userID: ID! @index(name: "byUser")
}

type Posting @model @auth(rules: [{allow: public}]) {
  id: ID!
  createdAt: AWSDateTime
  userID: ID! @index(name: "byUser")
  item: Item @hasOne
}

enum TransactionStatus {
  COMPLETED
  PAYMENT_PENDING
  CONFIRMATION_PENDING
}

type Transaction @model @auth(rules: [{allow: public}]) {
  id: ID!
  status: TransactionStatus
  users: [User] @manyToMany(relationName: "UserTransaction")
}

type Group @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
}

type Category @model @auth(rules: [{allow: public}]) {
  id: ID!
  categoryName: String
  itemID: ID! @index(name: "byItem")
}

type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  description: String
  image: AWSURL
  categories: [Category] @hasMany(indexName: "byItem", fields: ["id"])
  userID: ID! @index(name: "byUser")
}
 